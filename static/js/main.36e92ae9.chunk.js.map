{"version":3,"sources":["helper/styles.js","helper/CustomListItem.js","helper/Title.js","vis/SeasonCount.js","helper/Slider.js","vis/SeasonHistogram.js","dashboard/DashboardComponent.js","App.js","dashboard/menuItems.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","backgroundColor","palette","type","grey","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","CusomListItem","props","ListItem","button","selected","selectedIndex","itemNo","onClick","event","index","setSelectedIndex","component","Link","to","Tooltip","label","placement","ListItemIcon","icon","ListItemText","primary","Title","Typography","variant","color","gutterBottom","children","SeasonCountBar","useState","bars","setBars","alert","setAlert","legendData","setLegendData","loading","setLoading","useEffect","a","axios","get","res","turtleData","data","turtles","console","log","barElements","Object","keys","map","key","name","x","y","message","classes","className","Alert","severity","Container","Paper","CircularProgress","domainPadding","VictoryTheme","material","hight","orientation","colorScale","dependentAxis","offset","categories","DiscreteSlider","id","Slider","defaultValue","aria-labelledby","valueLabelDisplay","marks","min","minValue","max","maxValue","onChange","styled","div","sharedAxisStyles","axis","stroke","tickLabels","fontSize","axisLabel","fontStyle","SeasonHistogramBar","maxCount","setMaxCount","setData","React","yearGroup1","setYearGroup1","yearGroup2","setYearGroup2","years","setYears","year","parsedYear","parseInt","Count","containerComponent","labels","datum","voronoiDimension","labelComponent","dy","constrainToVisibleArea","style","grid","pointerEvents","strokeWidth","domain","animate","setYear","SliderContainer","YearSlider","value","setValue","first_year","last_year","length","total_years","obj","newValue","steps","DashbardComponent","maxWidth","Grid","item","md","library","add","faColumns","faChartBar","faSlidersH","faBars","faChevronLeft","App","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","List","window","location","pathname","MainListItems","exact","path","DashboardComponent","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"kWAuFeA,EAnFGC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNR,EAAMS,OAAON,SAElBO,OAAQ,CACNC,OAAQX,EAAMW,OAAOC,OAAS,EAC9BC,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhBC,MAAM,eAAD,OAzBW,IAyBX,OACLT,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBxB,QAAS,QAEXyB,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZT,MA3CgB,IA4ChBT,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASK,kBAGzCS,iBAAiB,aACfC,UAAW,SACXpB,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5CC,OAAQhB,EAAMc,YAAYE,OAAOC,MACjCC,SAAUlB,EAAMc,YAAYI,SAASC,gBAEvCG,MAAOtB,EAAMkC,QAAQ,IACpBlC,EAAMmC,YAAYC,GAAG,MAAQ,CAC5Bd,MAAOtB,EAAMkC,QAAQ,KAGzBG,aAAcrC,EAAMS,OAAON,QAC3BmC,QAAS,CACPC,gBACyB,UAAvBvC,EAAMwC,QAAQC,KACVzC,EAAMwC,QAAQE,KAAK,KACnB1C,EAAMwC,QAAQE,KAAK,KACzBd,SAAU,EACVe,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAY9C,EAAMkC,QAAQ,GAC1Ba,cAAe/C,EAAMkC,QAAQ,IAE/Bc,MAAO,CACLxC,QAASR,EAAMkC,QAAQ,GACvBhC,QAAS,OACT0C,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXP,OAAQ,S,mDCtECQ,EAAgB,SAACC,GAK5B,OACE,gBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,SAAUH,EAAMI,gBAAkBJ,EAAMK,OACxCC,QAAS,SAACC,GAAD,OARuBC,EAQeR,EAAMK,YAPvDL,EAAMS,iBAAiBD,GADG,IAAQA,GAShCE,UAAWC,IACXC,GAAIZ,EAAMY,IAEV,gBAACC,EAAA,EAAD,CAAStC,MAAOyB,EAAMc,MAAOC,UAAU,eACrC,gBAACC,EAAA,EAAD,KACE,gBAAC,IAAD,CAAiBC,KAAMjB,EAAMiB,SAGjC,gBAACC,EAAA,EAAD,CAAcC,QAASnB,EAAMc,U,wJCfpBM,MAZf,SAAepB,GACb,OACE,gBAACqB,EAAA,EAAD,CAAYX,UAAU,KAAKY,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GACjExB,EAAMyB,WCcPC,EAAiB,SAAC1B,GAAW,IAAD,EACR2B,mBAAS,kBAAC,IAAD,OADD,mBACzBC,EADyB,KACnBC,EADmB,OAENF,mBAAS,IAFH,mBAEzBG,EAFyB,KAElBC,EAFkB,OAGIJ,mBAAS,IAHb,mBAGzBK,EAHyB,KAGbC,EAHa,OAIFN,oBAAS,GAJP,mBAIzBO,EAJyB,KAIhBC,EAJgB,KAKhCC,qBAAU,WACR,sBAAC,gCAAAC,EAAA,+EAEqBC,IAAMC,IAAN,wDAFrB,OAESC,EAFT,OAKSC,EAAaD,EAAIE,KAAKA,KAAKC,QACjCC,QAAQC,IAAIJ,GACNK,EAAcC,OAAOC,KAAKP,GAAYQ,KAAI,SAACC,EAAK1C,GAEpD,OADAyB,GAAc,SAACD,GAAD,4BAAoBA,GAApB,CAAgC,CAAEmB,KAAMD,QAEpD,kBAAC,IAAD,CACER,KAAMD,EAAWS,GACjBE,EAAE,SACFC,EAAE,QACFH,IAAK,MAAQA,OAInBrB,EAAQiB,GACRX,GAAW,GAnBd,kDAqBGS,QAAQC,IAAI,KAAIS,SAChBvB,EAAS,KAAIuB,SAtBhB,yDAAD,KAyBC,IAEH,IAAMC,EAAU7G,IAEhB,OACE,6BACE,yBAAK8G,UAAWD,EAAQtE,eACb,KAAV6C,GAAgB,kBAAC2B,EAAA,EAAD,CAAOC,SAAS,SAAS5B,GAE1C,kBAAC6B,EAAA,EAAD,CAAWH,UAAWD,EAAQ9D,WAC1B,kBAACmE,EAAA,EAAD,KACE,kBAAC,EAAD,yBACC1B,GAAW,kBAAC2B,EAAA,EAAD,OAGV3B,GACA,kBAAC,IAAD,CAGE4B,cAAe,CAAEV,EAAG,KACpBxG,MAAOmH,IAAaC,SACpB9F,MAAO,IACP+F,MAAO,QAEP,kBAAC,IAAD,CACEvB,KAAMV,EACNkC,YAAY,aACZC,WAAY,gBAEd,kBAAC,IAAD,CAAaC,eAAe,IAC5B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,OAAQ,GACRF,WAAY,cACZG,WAAY,CAAElB,EAAG,CAAC,QAAS,OAAQ,WAElCxB,Q,6CCnFblF,EAAYC,YAAW,CAC3BE,KAAM,CACJqB,MAAO,UAILqG,GAAiB,SAACvE,GACtB,IAAMuD,EAAU7G,IAEhB,OACE,yBAAK8G,UAAWD,EAAQ1G,MACtB,kBAACwE,EAAA,EAAD,CAAYmD,GAAG,kBAAkBhD,cAAY,GAE1CxB,EAAMzB,OAET,kBAACkG,EAAA,EAAD,CACEC,aAAc1E,EAAM0E,aACpBC,kBAAgB,8BAChBC,kBAAkB,KAClBC,OAAK,EACLC,IAAK9E,EAAM+E,SACXC,IAAKhF,EAAMiF,SACXC,SAAUlF,EAAMkF,a,oQCHxB,IAAMvB,GAAYwB,IAAOC,IAAV,MAETC,GAAmB,CACvBC,KAAM,CACJC,OAAQ,eAEVC,WAAY,CACVC,SAAU,IAEZC,UAAW,CACTtI,QAAS,GACTqI,SAAU,GACVE,UAAW,WAITC,GAAqB,WAAO,IAAD,EACDjE,oBAAS,GADR,mBACxBO,EADwB,KACfC,EADe,OAELR,mBAAS,IAFJ,mBAExBG,EAFwB,KAEjBC,EAFiB,OAGCJ,mBAAS,KAHV,mBAGxBkE,EAHwB,KAGdC,EAHc,OAIPnE,qBAJO,mBAIxBe,EAJwB,KAIlBqD,EAJkB,OAKKC,IAAMrE,SAAS,MALpB,mBAKxBsE,EALwB,KAKZC,EALY,OAMKF,IAAMrE,SAAS,MANpB,mBAMxBwE,EANwB,KAMZC,EANY,OAOLJ,IAAMrE,SAAS,CAAC,OAPX,mBAOxB0E,EAPwB,KAOjBC,EAPiB,KASzB/C,EAAU7G,IA6BhB,OA3BA0F,qBAAU,WACR,sBAAC,gCAAAC,EAAA,+EAEqBC,IAAMC,IAAN,wDAFrB,OAESC,EAFT,OAKSC,EAAaD,EAAIE,KAAKA,KAAKC,QACjCoD,EAAQtD,GACJuC,EAAM,EACVsB,EACEvD,OAAOC,KAAKP,GAAYQ,KAAI,SAACsD,GAC3B,IAAMC,EAAaC,SAASF,EAAM,IAIlC,OAHI9D,EAAW+D,GAAY,GAAGE,MAAQ1B,IACpCA,EAAMvC,EAAW+D,GAAY,GAAGE,OAE3BF,MAGXrE,GAAW,GACX2D,EAAYd,GAlBf,kDAoBGpC,QAAQC,IAAI,KAAIS,SAChBvB,EAAS,KAAIuB,SArBhB,yDAAD,KAwBC,IAGD,6BACE,yBAAKE,UAAWD,EAAQtE,eACb,KAAV6C,GAAgB,kBAAC2B,EAAA,EAAD,CAAOC,SAAS,SAAS5B,GAE1C,kBAAC,GAAD,CAAW0B,UAAWD,EAAQ9D,WAC5B,kBAACmE,EAAA,EAAD,KACE,kBAAC,EAAD,yBACC1B,GAAW,kBAAC2B,EAAA,EAAD,OACV3B,GACA,kBAAC,IAAD,CACEyE,mBACE,kBAAC,IAAD,CACEC,OAAQ,qBAAGC,MAAkBH,OAC7BI,iBAAiB,IACjBC,eACE,kBAAC,IAAD,CAAiBC,IAAK,EAAGC,wBAAsB,MAIrDnD,cAAe,CAAEV,EAAG,KACpBxG,MAAOmH,IAAaC,SACpB9F,MAAO,IACPqB,OAAQ,KAER,kBAAC,IAAD,CACE2H,MAAK,eACA7B,GADA,CAEH8B,KAAM,CACJC,cAAe,UACfC,YAAa,MAGjBvG,MAAM,kBACNsD,eAAa,EACbkD,OAAQ,CAAEjE,EAAG,CAAC,EAAGwC,EAAW,OAE9B,kBAAC,IAAD,CACEqB,MAAK,eACA7B,GADA,CAEHK,UAAU,eAAML,GAAiBK,UAAxB,CAAmCtI,QAAS,OAEvD0D,MAAM,WAEQ,kBAAC,IAAD,CACZuD,OAAQ,GACRF,WAAY,cACZG,WAAY,CAAElB,EAAG,CAAC,QAAS,OAAQ,WAEvC,kBAAC,IAAD,CACEmE,QAAS,CAAEzJ,SAAU,KACrB4E,KAAMA,EAAKuD,GACX7C,EAAE,SACFC,EAAE,UAEJ,kBAAC,IAAD,CACEkE,QAAS,CAAEzJ,SAAU,KACrB4E,KAAMA,EAAKyD,GACX/C,EAAE,SACFC,EAAE,aAKNnB,GACA,kBAAC,GAAD,CAAYqE,KAAMN,EAAYuB,QAAStB,EAAeG,MAAOA,EAAO9H,MAAM,gBAAgBmG,aAAc,QAGxGxC,GACA,kBAAC,GAAD,CAAYqE,KAAMJ,EAAYqB,QAASpB,EAAeC,MAAOA,EAAO3B,aAAc,WASxF+C,GAAkBtC,IAAOC,IAAV,MASfsC,GAAa,SAAC,GAAmD,IAAjDnB,EAAgD,EAAhDA,KAAMiB,EAA0C,EAA1CA,QAASnB,EAAiC,EAAjCA,MAAO9H,EAA0B,EAA1BA,MAAOmG,EAAmB,EAAnBA,aAAmB,EAC1CsB,IAAMrE,SAAS,GAD2B,mBAC7DgG,EAD6D,KACtDC,EADsD,KAG9DC,EAAaxB,EAAM,GACnByB,EAAYzB,EAAMA,EAAM0B,OAAS,GACjCC,EAAcF,EAAYD,EAChC,OACE,kBAACJ,GAAD,KACE,kBAAC,GAAD,CACEvC,SAAU,SAAC+C,EAAKC,GACdN,EAASM,GACL3B,IAAS2B,GACXV,EAAQU,IAGZxD,aAAcA,EACdiD,MAAOA,EACP1C,SAAU6C,EACV/C,SAAU8C,EACVM,MAAOH,EACPzJ,MAAOA,MC5JA6J,GAnBW,WACxB,IAAM7E,EAAU7G,IAChB,OACE,2BACE,uBAAK8G,UAAWD,EAAQtE,eACxB,gBAAC0E,EAAA,EAAD,CAAW0E,SAAS,KAAK7E,UAAWD,EAAQ9D,WAC1C,gBAAC6I,EAAA,EAAD,CAAM7I,WAAS,EAACX,QAAS,GACvB,gBAACwJ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,gBAAC,EAAD,OAEF,gBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,gBAAC,GAAD,W,kBCIZC,KAAQC,IAAIC,KAAWC,KAAYC,KAAYC,KAAQC,MAEvD,IA4EeC,GA5EH,WACV,IAAMzF,EAAU7G,IADA,EAIQsJ,IAAMrE,UAAS,GAJvB,mBAITsH,EAJS,KAIHC,EAJG,KAYhB,OACE,yBAAK1F,UAAWD,EAAQ1G,MACtB,kBAAC,IAAD,KACE,kBAACsM,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACE1K,SAAS,WACT8E,UAAW6F,YAAK9F,EAAQjG,OAAQ2L,GAAQ1F,EAAQvF,cAEhD,kBAACsL,EAAA,EAAD,CAAS9F,UAAWD,EAAQxG,SAC1B,kBAACwM,EAAA,EAAD,CACEC,KAAK,QACLjI,MAAM,UACNkI,aAAW,cACXnJ,QApBa,WACvB4I,GAAQ,IAoBE1F,UAAW6F,YACT9F,EAAQnF,WACR6K,GAAQ1F,EAAQjF,mBAGlB,kBAAC,IAAD,CAAiB2C,KAAK,UAExB,kBAACI,EAAA,EAAD,CACEX,UAAU,KACVY,QAAQ,KACRC,MAAM,UACNmI,QAAM,EACNlG,UAAWD,EAAQhF,OALrB,eAWJ,kBAACoL,EAAA,EAAD,CACErI,QAAQ,YACRiC,QAAS,CACP3D,MAAOyJ,YAAK9F,EAAQ9E,aAAcwK,GAAQ1F,EAAQ3E,mBAEpDqK,KAAMA,GAEN,yBAAKzF,UAAWD,EAAQtG,aACtB,kBAACsM,EAAA,EAAD,CAAYjJ,QA5CI,WACxB4I,GAAQ,KA4CI,kBAAC,IAAD,CAAiBjI,KAAK,mBAG5B,kBAAC2I,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KChFmB,WAC3B,IADiC,EAOS7D,WANxB,CAChB,iBAAkB,EAClB,kBAAmB,EACnB,6BAA8B,EAC9B,iCAAkC,GAGxB8D,OAAOC,SAASC,WARK,mBAO1B5J,EAP0B,KAOXK,EAPW,KAWjC,OACE,2BACE,gBAAC,EAAD,CACEJ,OAAQ,EACRD,cAAeA,EACfK,iBAAkBA,EAClBG,GAAG,kBACHE,MAAM,YACNG,KAAK,YAEP,gBAAC,EAAD,CACEZ,OAAQ,EACRD,cAAeA,EACfK,iBAAkBA,EAClBG,GAAG,6BACHE,MAAM,eACNG,KAAK,cAEP,gBAAC,EAAD,CACEZ,OAAQ,EACRD,cAAeA,EACfK,iBAAkBA,EAClBG,GAAG,iCACHE,MAAM,mBACNG,KAAK,eD6CIgJ,IACP,kBAACL,EAAA,EAAD,OAEF,0BAAMpG,UAAWD,EAAQrE,SACvB,kBAAC,IAAD,CAAOgL,OAAK,EAACC,KAAK,mBAChB,kBAACC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,8BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kCACV,kBAAC,GAAD,WEnFQE,QACW,cAA7BP,OAAOC,SAASO,UAEe,UAA7BR,OAAOC,SAASO,UAEhBR,OAAOC,SAASO,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxI,QAAQwI,MAAMA,EAAM9H,c","file":"static/js/main.36e92ae9.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(6),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[100]\n        : theme.palette.grey[900],\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 480,\n  },\n}));\n\nexport default useStyles;\n","import * as React from \"react\";\n\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const CusomListItem = (props) => {\n  const handleListItemClick = (event, index) => {\n    props.setSelectedIndex(index);\n  };\n\n  return (\n    <ListItem\n      button\n      selected={props.selectedIndex === props.itemNo}\n      onClick={(event) => handleListItemClick(event, props.itemNo)}\n      component={Link}\n      to={props.to}\n    >\n      <Tooltip title={props.label} placement=\"right-start\">\n        <ListItemIcon>\n          <FontAwesomeIcon icon={props.icon} />\n        </ListItemIcon>\n      </Tooltip>\n      <ListItemText primary={props.label} />\n    </ListItem>\n  );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\n\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryGroup,\n  VictoryLegend,\n} from \"victory\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport useStyles from \"../helper/styles\";\nimport Title from \"../helper/Title\";\n\nconst SeasonCountBar = (props) => {\n  const [bars, setBars] = useState(<VictoryBar />);\n  const [alert, setAlert] = useState(\"\");\n  const [legendData, setLegendData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get(\n          `https://bmd-micro.herokuapp.com/sumYearSeasonVictory`\n        );\n        const turtleData = res.data.data.turtles;\n        console.log(turtleData);\n        const barElements = Object.keys(turtleData).map((key, index) => {\n          setLegendData((legendData) => [...legendData, { name: key }]);\n          return (\n            <VictoryBar\n              data={turtleData[key]}\n              x=\"Period\"\n              y=\"Count\"\n              key={\"bar\" + key}\n            />\n          );\n        });\n        setBars(barElements);\n        setLoading(false);\n      } catch (err) {\n        console.log(err.message);\n        setAlert(err.message);\n      }\n    })();\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className={classes.appBarSpacer} />\n      {alert !== \"\" && <Alert severity=\"error\">{alert}</Alert>}\n\n      <Container className={classes.container}>\n          <Paper>\n            <Title>Count per Season</Title>\n            {loading && <CircularProgress />}\n\n            {/* wrapper component that plots all of its children on the same scale.  */}\n            {!loading && (\n              <VictoryChart\n                // domainPadding will add space to each side of VictoryBar to\n                // prevent it from overlapping the axis\n                domainPadding={{ x: 100 }}\n                theme={VictoryTheme.material}\n                width={800}\n                hight={\"100%\"}\n              >\n                <VictoryLegend\n                  data={legendData}\n                  orientation=\"horizontal\"\n                  colorScale={\"qualitative\"}\n                />\n                <VictoryAxis dependentAxis={true} />\n                <VictoryAxis />\n                <VictoryGroup\n                  offset={10}\n                  colorScale={\"qualitative\"}\n                  categories={{ x: [\"Early\", \"Late\", \"Total\"] }}\n                >\n                  {bars}\n                </VictoryGroup>\n              </VictoryChart>\n            )}\n          </Paper>\n      </Container>\n    </div>\n  );\n};\n\nexport { SeasonCountBar };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\n\nconst DiscreteSlider = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        {/* {`${props.steps} Years ${props.minValue}..${props.maxValue}`} */}\n        {props.title}\n      </Typography>\n      <Slider\n        defaultValue={props.defaultValue}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        valueLabelDisplay=\"on\"\n        marks\n        min={props.minValue}\n        max={props.maxValue}\n        onChange={props.onChange}\n      />\n    </div>\n  );\n};\n\nexport { DiscreteSlider };\n","import React, { useEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport axios from \"axios\";\n\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryGroup,\n  VictoryTheme,\n  VictoryVoronoiContainer,\n  VictoryTooltip,\n} from \"victory\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport useStyles from \"../helper/styles\";\nimport Title from \"../helper/Title\";\nimport { DiscreteSlider } from \"../helper/Slider\";\n\nconst Container = styled.div``;\n\nconst sharedAxisStyles = {\n  axis: {\n    stroke: \"transparent\",\n  },\n  tickLabels: {\n    fontSize: 14,\n  },\n  axisLabel: {\n    padding: 36,\n    fontSize: 15,\n    fontStyle: \"italic\",\n  },\n};\n\nconst SeasonHistogramBar = () => {\n  const [loading, setLoading] = useState(true);\n  const [alert, setAlert] = useState(\"\");\n  const [maxCount, setMaxCount] = useState(100);\n  const [data, setData] = useState();\n  const [yearGroup1, setYearGroup1] = React.useState(2013);\n  const [yearGroup2, setYearGroup2] = React.useState(2020);\n  const [years, setYears] = React.useState([2020]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get(\n          `https://bmd-micro.herokuapp.com/sumYearSeasonVictory`\n        );\n        const turtleData = res.data.data.turtles;\n        setData(turtleData);\n        let max = 0;\n        setYears(\n          Object.keys(turtleData).map((year) => {\n            const parsedYear = parseInt(year, 10);;\n            if (turtleData[parsedYear][2].Count > max) {\n              max = turtleData[parsedYear][2].Count;\n            }\n            return parsedYear;\n          })\n        );\n        setLoading(false);\n        setMaxCount(max);\n      } catch (err) {\n        console.log(err.message);\n        setAlert(err.message);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <div className={classes.appBarSpacer} />\n      {alert !== \"\" && <Alert severity=\"error\">{alert}</Alert>}\n\n      <Container className={classes.container}>\n        <Paper>\n          <Title>Season Histogram</Title>\n          {loading && <CircularProgress />}\n          {!loading && (\n            <VictoryChart\n              containerComponent={\n                <VictoryVoronoiContainer\n                  labels={({ datum }) => datum.Count}\n                  voronoiDimension=\"x\"\n                  labelComponent={\n                    <VictoryTooltip  dy={-7} constrainToVisibleArea />\n                  }\n                />\n              }\n              domainPadding={{ x: 100 }}\n              theme={VictoryTheme.material}\n              width={400}\n              height={250}\n            >\n              <VictoryAxis\n                style={{\n                  ...sharedAxisStyles,\n                  grid: {\n                    pointerEvents: \"painted\",\n                    strokeWidth: 0.5,\n                  },\n                }}\n                label=\"# Turtle Counts\"\n                dependentAxis\n                domain={{ y: [0, maxCount + 10] }}\n              />\n              <VictoryAxis\n                style={{\n                  ...sharedAxisStyles,\n                  axisLabel: { ...sharedAxisStyles.axisLabel, padding: 35 },\n                }}\n                label=\"Season\"\n              />\n                              <VictoryGroup\n                  offset={20}\n                  colorScale={\"qualitative\"}\n                  categories={{ x: [\"Early\", \"Late\", \"Total\"] }}\n                >\n              <VictoryBar\n                animate={{ duration: 100 }}\n                data={data[yearGroup1]}\n                x=\"Period\"\n                y=\"Count\"\n              />\n              <VictoryBar\n                animate={{ duration: 100 }}\n                data={data[yearGroup2]}\n                x=\"Period\"\n                y=\"Count\"\n              />\n              </VictoryGroup>\n            </VictoryChart>\n          )}\n          {!loading && (\n            <YearSlider year={yearGroup1} setYear={setYearGroup1} years={years} title=\"Compare Years\" defaultValue={2014} />\n            \n          )}\n          {!loading && (\n            <YearSlider year={yearGroup2} setYear={setYearGroup2} years={years} defaultValue={2018}/>\n            \n          )}\n        </Paper>\n      </Container>\n    </div>\n  );\n};\n\nconst SliderContainer = styled.div`\n  padding: 16px 25px 10px;\n\n  // when rendered in the gallery preview\n  a & {\n    padding: 12px 36px 0px;\n  }\n`;\n\nconst YearSlider = ({ year, setYear, years, title, defaultValue }) => {\n  const [value, setValue] = React.useState(0);\n\n  const first_year = years[0];\n  const last_year = years[years.length - 1];\n  const total_years = last_year - first_year;\n  return (\n    <SliderContainer>\n      <DiscreteSlider\n        onChange={(obj, newValue) => {\n          setValue(newValue);\n          if (year !== newValue) {\n            setYear(newValue);\n          }\n        }}\n        defaultValue={defaultValue}\n        value={value}\n        maxValue={last_year}\n        minValue={first_year}\n        steps={total_years}\n        title={title}\n      />\n    </SliderContainer>\n  );\n};\n\nexport { SeasonHistogramBar };\n","import * as React from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport useStyles from \"../helper/styles\";\n\nimport { SeasonCountBar } from \"../vis/SeasonCount\";\nimport { SeasonHistogramBar } from \"../vis/SeasonHistogram\";\n\nconst DashbardComponent = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.appBarSpacer} />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={1}>\n          <Grid item md={6}>\n            <SeasonCountBar />\n          </Grid>\n          <Grid item md={6}>\n            <SeasonHistogramBar />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default DashbardComponent;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// Material UI\nimport { AppBar, CssBaseline, Drawer, Divider, IconButton, List, Toolbar, Typography } from \"@material-ui/core\";\n\n// Custom styling\nimport useStyles from \"./helper/styles\";\nimport clsx from \"clsx\";\n\nimport {MainListItems} from \"./dashboard/menuItems\"\nimport DashboardComponent from \"./dashboard/DashboardComponent\";\nimport { SeasonCountBar } from \"./vis/SeasonCount\";\nimport { SeasonHistogramBar } from \"./vis/SeasonHistogram\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faColumns,\n  faChartBar,\n  faSlidersH,\n  faBars,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faColumns, faChartBar, faSlidersH, faBars, faChevronLeft);\n\nconst App = () => {\n  const classes = useStyles();\n\n  // Drawer\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <FontAwesomeIcon icon=\"bars\" />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n                <FontAwesomeIcon icon=\"chevron-left\" />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{MainListItems()}</List>\n          <Divider />\n        </Drawer>\n        <main className={classes.content}>\n          <Route exact path=\"/React-Turtles/\">\n            <DashboardComponent />\n          </Route>\n          <Route path=\"/React-Turtles/SeasonCount\">\n            <SeasonCountBar />\n          </Route>\n          <Route path=\"/React-Turtles/SeasonHistogram\">\n            <SeasonHistogramBar />\n          </Route>\n        </main>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\n\nimport { CusomListItem } from \"../helper/CustomListItem\";\n\nexport const MainListItems = () => {\n  const listRoute = {\n    \"/React-Turtles\": 0,\n    \"/React-Turtles/\": 0,\n    \"/React-Turtles/SeasonCount\": 1,\n    \"/React-Turtles/SeasonHistogram\": 2,\n  };\n  const [selectedIndex, setSelectedIndex] = React.useState(\n    listRoute[window.location.pathname]\n  );\n\n  return (\n    <div>\n      <CusomListItem\n        itemNo={0}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={setSelectedIndex}\n        to=\"/React-Turtles/\"\n        label=\"Dashboard\"\n        icon=\"columns\"\n      />\n      <CusomListItem\n        itemNo={1}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={setSelectedIndex}\n        to=\"/React-Turtles/SeasonCount\"\n        label=\"Season Count\"\n        icon=\"chart-bar\"\n      />\n      <CusomListItem\n        itemNo={2}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={setSelectedIndex}\n        to=\"/React-Turtles/SeasonHistogram\"\n        label=\"Season Histogram\"\n        icon=\"sliders-h\"\n      />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}